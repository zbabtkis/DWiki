<?php

function get_or_add_term($term_in) //Sorts terms from it site by thier term id on the eri site. Creates a new term in corresponding vocab if term doesn't exist.
{
	$term_tid = array();
	$vid = variable_get('wiki-vocab');
	foreach($term_in as $term)
	{
		$term_array = taxonomy_get_term_by_name($term);
		if($term_array == array()) //If it term does not exist in selected taxonomy
		{			taxonomy_term_save((object) array(
				'name' => $term,
				'vid' => $vid)) or die("Could not select Taxonomy from DB");
		}
		$existing_term = taxonomy_get_term_by_name($term);
		foreach($existing_term as $name)
		{
			$term_tid[] = $name->tid;
		}
	}
	return($term_tid);
}

function DWiki_form_alter(&$form, &$form_state, $form_id)
{
	$w_page_name = variable_get("wiki-type", 'wiki_page_node_form');
	//dsm($form);
	$webform_results = $w_page_name; //webform of the Account Request Form
	switch($form_id)
	{
		case $webform_results:
			unset($form['field_category']);
			$form['actions']['submit']['#submit'][] = 'DWiki_form_submit'; //Tells the webform to process the below function before submitting the updated values.
			break;
		default:
			break;
	}
}

function DWiki_form_submit($form, &$form_state)
{
	$modContent = $form_state['values']['body']['und'][0]['value'];
	preg_match_all("/\[\[(Category|category)\:(.*)\]\]/", $modContent, $category);
	//preg_match_all('/<span class="mw-headline" id="(.*)">(.*)</span>/', $modContent, $title);
	
	$tid = get_or_add_term($category[2]);
	$nid = $form_state['nid'];
	$node = node_load($nid);
	unset($node->field_category['und']);
	foreach($tid as $t)
	{
		$node->field_category['und'][]['tid'] = $t;
	}
	node_save($node);
}

function DWiki_node_view($node, $view_mode, $langcode) {
	if(!isset($node->content['body']))
	{
		return 0;
	}
	else
	{
		$uri = arg(1);
		
		//Addes html brackets back to images
		
		if($node->content['body'][0]['#markup'] = preg_replace("/&lt;img/", "<img", $node->content['body'][0]['#markup']))
		{
			$node->content['body'][0]['#markup'] = preg_replace("/&gt;/", ">", $node->content['body'][0]['#markup']);
		}
		
		
		$modContent = $node->content['body'][0]['#markup'];
		$fixed_links = preg_replace('/<span class=\"editsection\">\[<a href="(.*?)section=(.*?)" (.*?)">(.*?)<\/span>(.*?)\">(.*?)</', "<span class=\"editsection\">[<a href=\"/node/$uri/edit?&=$6\">Edit</a>]</span>$5\">$6<", $modContent); //\"/node/$uri/section/$2/edit\"
		$node->content['body'][0]['#markup'] = $fixed_links;
		$modContent = $node->content['body'][0]['#markup'];
		$fixed_links = preg_replace('/<a href="\/w(.*?)">(.*?)<\/a>/', "<a href=\"/wiki/$2\">$2</a>", $modContent);
		$node->content['body'][0]['#markup'] = $fixed_links;
  	}
}

function DWiki_menu()
{
	$items = array();
	
	//sets help menu
	
	$items['admin/config/dwiki'] = array(
		'title' => "DWiki Configuration",
		'description' => "Set the below elements to the corresponding part of your wiki.",
		'page callback' => 'drupal_get_form',
		'page arguments' => array('dwiki_config_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
		);
	
	//sets section editor menu
	
	$items['node/%/section/%/edit'] = array(
		'title' => "Section Editor",
		'description' => "Edit the section",
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_dwiki_section_editor_form',1,3),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
		);
	return($items);
}

function _dwiki_section_editor_form($form_state,$n)
{
	$form = array();
	$nid = $n['build_info']['args'][0]; //get the nid from the above arg
	$section_id = $n['build_info']['args'][1]-1; //subtract 1 from the section_id arg given to match to the beginning of an array returned below
	$nod = node_load($nid);
	$content = $nod->body['und'][0]['value']; //get content from node
	preg_match_all("/(==+)(.*)[^=](==+)\r/", $content, $title); //get title from between == and ==
	$section_title = $title[0][$section_id];
	preg_match_all("/(==+)\r(.*?)((==+)|\z)/sm", $content, $section); //get title from between == and ==
	$section_content = $section[2][$section_id];
	//dsm($section);
	preg_match_all("/(==+)\r(.*)\r(==+)/sm", $content, $section_test);
	//dsm($title);
	//dsm($section_title);
	//dsm($section_content);
	foreach($section[2] as $s_pre)
	{
		$s_pre_temp = trim(preg_replace("<\!-*(.*)->", "" , $s_pre));
		if($s_pre_temp != "<" && $s_pre_temp != "")
		{
			$s_post[] = $s_pre_temp;
		}
	}
	//(==+)(.*)[^=](==+)\r
	//dsm($section[2]);
	//dsm($s_post[$section_id]);
	dsm($section_test);
	
	//$whole = preg_replace("/" . $title[0][$section_id] . "\r(.*?)==/sm", $form_state['input']['section'] . "\n$1\n==" ,$content);
	//dsm($whole);	
	
	$form['section'] = array(
		'#type' => 'textarea',
		'#title' => t('Section: ' . $nod->title . " => " . $section_title),
		'#value' => "" . $section_title . "" . $section_content,
		'#attributes' => array()
		);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
		);
	return($form);
}

function _dwiki_section_editor_form_submit($form, &$form_state)
{
	$section_id = $form_state['build_info']['args'][1]-1;
	$nid = $form_state['build_info']['args'][0];
	$n = node_load($nid);
	$content = $n->body['und'][0]['value'];
	$new_content = $form_state['input']['section'];
	preg_match_all("/(==+)(.*)[^=](==+)\r/", $content, $title); //get title from between == and ==
	$location = $title[0][$section_id];
	$whole = preg_replace("/" . $location . "\r(.*?)==/sm", $new_content , $content);
	$n->body['und'][0]['value'] = $whole;
	node_save($n);
	dsm("The wiki page has been saved!");
}


function dwiki_config_form()
{
	$form = array();
	$types = node_type_get_types();
	foreach($types as $type)
	{
		$content_types["$type->type" . "_node_form"] = $type->name;
	}
	//$wiki_type = variable_get('wiki-type');
	//print drupal_render(node_add("'$wiki_type'"));
	$vocabs = taxonomy_get_vocabularies();
	foreach($vocabs as $vocab)
	{
		$voc[$vocab->vid] = $vocab->name;
	}
	
	$form['wiki-type'] = array(
		'#type' => 'select',
		'#title' => t('Select the content type that you are using for Wiki Pages: '),
		'#default_value' => variable_get('wiki-type', 'w'),
		'#options' => $content_types
		);
	$form['wiki-vocab'] = array(
		'#type' => 'select',
		'#title' => t('Select the vocabulary that you are using to categorize drupal pages: '),
		'#default_value' => variable_get('wiki-vocab', 'w'),
		'#options' => $voc
		);
	return(system_settings_form($form));
}
